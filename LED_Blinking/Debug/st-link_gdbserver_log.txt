[0.000] initConfigParams():  Configuration flags start
[0.000] initConfigParams():   external-init                  false
[0.000] initConfigParams():   pend-halt-timeout              (null)
[0.000] initConfigParams():   halt                           false
[0.000] initConfigParams():   config-file                    ""
[0.000] initConfigParams():   persistent                     false
[0.000] initConfigParams():  +log-file                       "C:\Users\asus\STM32CubeIDE\workspace_1.12.0\LED_Blinking\Debug\st-link_gdbserver_log.txt"
[0.001] initConfigParams():  +log-level                      31
[0.001] initConfigParams():  +port-number                    61234
[0.001] initConfigParams():  +verbose                        true
[0.001] initConfigParams():   refresh-delay                  15
[0.001] initConfigParams():  +verify                         true
[0.001] initConfigParams():  +swd                            true
[0.001] initConfigParams():   swo-port                       61234
[0.001] initConfigParams():   cpu-clock                      8000000
[0.001] initConfigParams():   swo-clock-div                  128
[0.001] initConfigParams():   initialize-reset               false
[0.001] initConfigParams():   debuggers                      false
[0.001] initConfigParams():   serial-number                  ""
[0.001] initConfigParams():  +apid                           0
[0.001] initConfigParams():  +attach                         true
[0.001] initConfigParams():  +shared                         true
[0.001] initConfigParams():   erase-all                      false
[0.001] initConfigParams():   memory-map                     ""
[0.001] initConfigParams():   ext-memory-loaders             false
[0.001] initConfigParams():   extload_init                   (null)
[0.001] initConfigParams():   extload                        (null)
[0.001] initConfigParams():  +stm32cubeprogrammer-path       "C:\ST\STM32CubeIDE_1.12.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.cubeprogrammer.win32_2.1.200.202311302303\tools\bin"
[0.001] initConfigParams():   temp-path                      ""
[0.001] initConfigParams():   preserve-temps                 false
[0.001] initConfigParams():   frequency                      0
[0.001] initConfigParams():   licenses                       false
[0.001] initConfigParams():   ignore-rest                    false
[0.001] initConfigParams():   version                        false
[0.001] initConfigParams():   help                           false
[0.001] initConfigParams():  Configuration flags end
[0.010] init():  STMicroelectronics ST-LINK GDB server. Version 7.6.0
Copyright (c) 2024, STMicroelectronics. All rights reserved.
[0.212] openDevice():  COM frequency = 4000 kHz
[0.213] openDevice():  Target connection mode: Attach
[0.229] readFromTarget():  Reading ROM table for AP 0 @0xe00fffd0
[0.242] reset_hw_wtchpt_module():  Hardware watchpoint supported by the target 
[0.251] initContext():  ST-LINK Firmware version : V2J44S7
[0.251] initContext():  Device ID: 0x410
[0.255] initContext():  PC: 0xa
[0.257] Device_GetStatus():  ST-LINK device status: RUN_MODE
[0.258] initContext():  ST-LINK detects target voltage = 3.26 V
[0.259] initContext():  ST-LINK device status: RUN_MODE
[0.259] initServerContext():  ST-LINK device initialization OK
[0.259] pollAndNotifyRun():  Stm32Device, pollAndNotify running...
[0.260] updateState():  SwvSrv state change: 0 -> 1
[0.260] WaitConnection():  Waiting for connection on port 61234...
[0.261] WaitConnection():  Waiting for connection on port 61235...
[4.291] WaitConnection():  Accepted connection on port 61234...
[4.291] WaitConnection():  Waiting for connection on port 61234...
[4.291] run():  GDB session thread running
[4.291] handleSessionEvent():  GdbSessionManager, session started: 1
[4.296] haltOnConnect():  Try halt...
[4.298] read():  <932> Rx: +$qSupported:multiprocess+;swbreak+;hwbreak+;qRelocInsn+;fork-events+;vfork-events+;exec-events+;vContSupported+;QThreadEvents+;no-resumed+;memory-tagging+#ec
[4.321] write():  <932> Tx: +
[4.321] write():  <932> Tx: $PacketSize=4000;qXfer:memory-map:read+;qXfer:features:read+;QStartNoAckMode+;QNonStop+;qXfer:threads:read+;hwbreak+;swbreak+#f3
[4.321] read():  <932> Rx: +$vMustReplyEmpty#3a
[4.337] write():  <932> Tx: +
[4.337] write():  <932> Tx: $#00
[4.337] read():  <932> Rx: +
[4.337] read():  <932> Rx: $QStartNoAckMode#b0
[4.337] write():  <932> Tx: +
[4.337] write():  <932> Tx: $OK#9a
[4.337] read():  <932> Rx: +
[4.338] read():  <932> Rx: $Hg0#df
[4.338] write():  <932> Tx: $#00
[4.338] read():  <932> Rx: $qXfer:features:read:target.xml:0,1000#0c
[4.338] write():  <932> Tx: $l<?xml version="1.0"?><!-- Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.     Copying and distribution of this file, with or without modification,     are permitted in any medium without royalty provided the copyright     notice and this notice are preserved.  --><!DOCTYPE target SYSTEM "gdb-target.dtd"><target><feature name="org.gnu.gdb.arm.m-profile">  <reg name="r0" bitsize="32"/>  <reg name="r1" bitsize="32"/>  <reg name="r2" bitsize="32"/>  <reg name="r3" bitsize="32"/>  <reg name="r4" bitsize="32"/>  <reg name="r5" bitsize="32"/>  <reg name="r6" bitsize="32"/>  <reg name="r7" bitsize="32"/>  <reg name="r8" bitsize="32"/>  <reg name="r9" bitsize="32"/>  <reg name="r10" bitsize="32"/>  <reg name="r11" bitsize="32"/>  <reg name="r12" bitsize="32"/>  <reg name="sp" bitsize="32" type="data_ptr"/>  <reg name="lr" bitsize="32"/>  <reg name="pc" bitsize="32" type="code_ptr"/>  <reg name="xpsr" bitsize="32" regnum="25"/></feature><feature name="org.gnu.gdb.arm.m-system">  <reg name="primask" bitsize="32" regnum="93"/>  <reg name="basepri" bitsize="32" regnum="94"/>  <reg name="faultmask" bitsize="32" regnum="95"/>  <reg name="control" bitsize="32" regnum="96"/>  <reg name="msp" bitsize="32" type="data_ptr" regnum="97"/>  <reg name="psp" bitsize="32" type="data_ptr" regnum="98"/>  </feature></target>#c2
[4.340] read():  <932> Rx: $QNonStop:0#8c
[4.340] write():  <932> Tx: $OK#9a
[4.340] read():  <932> Rx: $qTStatus#49
[4.340] write():  <932> Tx: $#00
[4.340] read():  <932> Rx: $?#3f
[4.340] write():  <932> Tx: $S05#b8
[4.340] read():  <932> Rx: $qXfer:threads:read::0,1000#92
[4.340] write():  <932> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[4.341] read():  <932> Rx: $qAttached#8f
[4.341] write():  <932> Tx: $#00
[4.341] read():  <932> Rx: $Hc-1#09
[4.341] write():  <932> Tx: $#00
[4.341] read():  <932> Rx: $qC#b4
[4.341] write():  <932> Tx: $QC1#c5
[4.341] read():  <932> Rx: $qOffsets#4b
[4.341] write():  <932> Tx: $#00
[4.341] read():  <932> Rx: $g#67
[4.346] write():  <932> Tx: $c0c2000000200000c0c20000c0c200002c0000200000000000000000e04f00200000000000000000000000000000000000000000e04f002095040008960400080000002100000000000000000000000000000000e04f002000000000#7c
[4.346] read():  <932> Rx: $qXfer:threads:read::0,1000#92
[4.346] write():  <932> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[4.370] Device_GetStatus():  ST-LINK device status: HALT_MODE
[4.372] read():  <932> Rx: $qXfer:memory-map:read::0,1000#ab
[4.373] write():  <932> Tx: $l<?xml version="1.0"?>\x0a<!DOCTYPE memory-map\x0a          PUBLIC "+//IDN gnu.org//DTD GDB Memory Map V1.0//EN"\x0a                 "http://sourceware.org/gdb/gdb-memory-map.dtd">\x0a<memory-map>\x0a<memory type="ram" start="0x0" length="0x8000000"/>\x0a<memory type="flash" start="0x8000000" length="0x20000">\x0a<property name="blocksize">0x400</property>\x0a</memory>\x0a<memory type="ram" start="0x8020000" length="0xf7fdffff"/>\x0a</memory-map>#a3
[4.373] read():  <932> Rx: $m8000496,4#38
[4.373] handlePacket():  Reading 0x4 bytes of memory from addr 0x8000496 
[4.377] write():  <932> Tx: $bb68d31a#5b
[4.377] read():  <932> Rx: $m20004fc0,40#ec
[4.377] handlePacket():  Reading 0x40 bytes of memory from addr 0x20004fc0 
[4.377] write():  <932> Tx: $00200000e9030000bfc2000000000000950400085e04000800000021e04f002000200000e803000099bf0000e9030000f84f002085010008f84f00208b030008#00
[4.377] read():  <932> Rx: $m8000184,4#32
[4.377] handlePacket():  Reading 0x4 bytes of memory from addr 0x8000184 
[4.378] write():  <932> Tx: $00bfe9e7#62
[4.380] read():  <932> Rx: $qSymbol::#5b
[4.380] write():  <932> Tx: $#00
[4.380] read():  <932> Rx: $qXfer:threads:read::0,1000#92
[4.380] write():  <932> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[4.399] read():  <932> Rx: $qRcmd,5265616441504578203078302030784638#08
[4.402] write():  <932> Tx: $4f2e4b2e3a307865303066663030330a#8a
[4.405] read():  <932> Rx: $qXfer:threads:read::0,1000#92
[4.405] write():  <932> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[4.406] read():  <932> Rx: $qRcmd,526561644d656d41502030783020307845303046464644302030783820307830#66
[4.410] write():  <932> Tx: $4f2e4b2e3a3078302c3078302c3078302c3078302c307831302c3078342c3078612c3078300a#aa
[4.710] read():  <932> Rx: $qXfer:threads:read::0,1000#92
[4.710] write():  <932> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[4.712] read():  <932> Rx: $qXfer:threads:read::0,1000#92
[4.712] write():  <932> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[6.463] WaitConnection():  Accepted connection on port 61234...
[6.463] WaitConnection():  Waiting for connection on port 61234...
[6.463] run():  GDB session thread running
[6.463] handleSessionEvent():  GdbSessionManager, session started: 2
[6.475] read():  <952> Rx: +
[6.475] read():  <952> Rx: $qSupported:multiprocess+;swbreak+;hwbreak+;qRelocInsn+;fork-events+;vfork-events+;exec-events+;vContSupported+;QThreadEvents+;no-resumed+;memory-tagging+#ec
[6.475] write():  <952> Tx: +
[6.475] write():  <952> Tx: $PacketSize=4000;qXfer:memory-map:read+;qXfer:features:read+;QStartNoAckMode+;QNonStop+;qXfer:threads:read+;hwbreak+;swbreak+#f3
[6.475] read():  <952> Rx: +$vMustReplyEmpty#3a
[6.490] write():  <952> Tx: +
[6.490] write():  <952> Tx: $#00
[6.490] read():  <952> Rx: +$QStartNoAckMode#b0
[6.505] write():  <952> Tx: +
[6.505] write():  <952> Tx: $OK#9a
[6.505] read():  <952> Rx: +
[6.505] read():  <952> Rx: $Hg0#df
[6.505] write():  <952> Tx: $#00
[6.505] read():  <952> Rx: $qXfer:features:read:target.xml:0,1000#0c
[6.505] write():  <952> Tx: $l<?xml version="1.0"?><!-- Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.     Copying and distribution of this file, with or without modification,     are permitted in any medium without royalty provided the copyright     notice and this notice are preserved.  --><!DOCTYPE target SYSTEM "gdb-target.dtd"><target><feature name="org.gnu.gdb.arm.m-profile">  <reg name="r0" bitsize="32"/>  <reg name="r1" bitsize="32"/>  <reg name="r2" bitsize="32"/>  <reg name="r3" bitsize="32"/>  <reg name="r4" bitsize="32"/>  <reg name="r5" bitsize="32"/>  <reg name="r6" bitsize="32"/>  <reg name="r7" bitsize="32"/>  <reg name="r8" bitsize="32"/>  <reg name="r9" bitsize="32"/>  <reg name="r10" bitsize="32"/>  <reg name="r11" bitsize="32"/>  <reg name="r12" bitsize="32"/>  <reg name="sp" bitsize="32" type="data_ptr"/>  <reg name="lr" bitsize="32"/>  <reg name="pc" bitsize="32" type="code_ptr"/>  <reg name="xpsr" bitsize="32" regnum="25"/></feature><feature name="org.gnu.gdb.arm.m-system">  <reg name="primask" bitsize="32" regnum="93"/>  <reg name="basepri" bitsize="32" regnum="94"/>  <reg name="faultmask" bitsize="32" regnum="95"/>  <reg name="control" bitsize="32" regnum="96"/>  <reg name="msp" bitsize="32" type="data_ptr" regnum="97"/>  <reg name="psp" bitsize="32" type="data_ptr" regnum="98"/>  </feature></target>#c2
[6.508] read():  <952> Rx: $QNonStop:0#8c
[6.508] write():  <952> Tx: $OK#9a
[6.508] read():  <952> Rx: $qTStatus#49
[6.508] write():  <952> Tx: $#00
[6.508] read():  <952> Rx: $?#3f
[6.508] write():  <952> Tx: $S05#b8
[6.508] read():  <952> Rx: $qXfer:threads:read::0,1000#92
[6.508] write():  <952> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[6.508] read():  <952> Rx: $qAttached#8f
[6.508] write():  <952> Tx: $#00
[6.509] read():  <952> Rx: $Hc-1#09
[6.509] write():  <952> Tx: $#00
[6.509] read():  <952> Rx: $qC#b4
[6.509] write():  <952> Tx: $QC1#c5
[6.509] read():  <952> Rx: $qOffsets#4b
[6.509] write():  <952> Tx: $#00
[6.509] read():  <952> Rx: $g#67
[6.513] write():  <952> Tx: $c0c2000000200000c0c20000c0c200002c0000200000000000000000e04f00200000000000000000000000000000000000000000e04f002095040008960400080000002100000000000000000000000000000000e04f002000000000#7c
[6.513] read():  <952> Rx: $qXfer:threads:read::0,1000#92
[6.513] write():  <952> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[6.525] read():  <952> Rx: $qXfer:memory-map:read::0,1000#ab
[6.526] write():  <952> Tx: $l<?xml version="1.0"?>\x0a<!DOCTYPE memory-map\x0a          PUBLIC "+//IDN gnu.org//DTD GDB Memory Map V1.0//EN"\x0a                 "http://sourceware.org/gdb/gdb-memory-map.dtd">\x0a<memory-map>\x0a<memory type="ram" start="0x0" length="0x8000000"/>\x0a<memory type="flash" start="0x8000000" length="0x20000">\x0a<property name="blocksize">0x400</property>\x0a</memory>\x0a<memory type="ram" start="0x8020000" length="0xf7fdffff"/>\x0a</memory-map>#a3
[6.527] read():  <952> Rx: $m8000496,4#38
[6.527] handlePacket():  Reading 0x4 bytes of memory from addr 0x8000496 
[6.530] write():  <952> Tx: $bb68d31a#5b
[6.530] read():  <952> Rx: $m20004fc0,40#ec
[6.530] handlePacket():  Reading 0x40 bytes of memory from addr 0x20004fc0 
[6.531] write():  <952> Tx: $00200000e9030000bfc2000000000000950400085e04000800000021e04f002000200000e803000099bf0000e9030000f84f002085010008f84f00208b030008#00
[6.531] read():  <952> Rx: $m8000184,4#32
[6.531] handlePacket():  Reading 0x4 bytes of memory from addr 0x8000184 
[6.532] write():  <952> Tx: $00bfe9e7#62
[6.533] read():  <952> Rx: $qSymbol::#5b
[6.533] write():  <952> Tx: $#00
[6.537] read():  <932> Rx: $qRcmd,7265736574#37
[6.537] STM32_SystemReset():  Enter STM32_SystemReset() function 
[6.542] initAfterReset():  Enter STM32_InitAfterReset() function 
[6.546] STM32_ClearFaultStatus():  NVIC_DFSR_REG = 0x00000008
[6.551] STM32_ClearFaultStatus():  NVIC_CFGFSR_REG = 0x00000000
[6.555] write():  <932> Tx: $53544d3332205375636365737366756c6c7920636f6d706c65746564207265736574206f7065726174696f6e202853797374656d207265736574290a#b8
[6.590] read():  <932> Rx: $vFlashErase:08000000,00001400#c7
[6.591] handleFlashPacket():  FlashErase skipped (Will be performed at flash done)
[6.591] write():  <932> Tx: $OK#9a
[6.591] read():  <932> Rx: $vFlashWrite:8000000:\x00P\x00 Y\x03\x00\x08\xff\x02\x00\x08\xff\x02\x00\x08\x05\x03\x00\x08\x0d\x03\x00\x08\x15\x03\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1d\x03\x00\x08)\x03\x00\x08\x00\x00\x00\x005\x03\x00\x08A\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\xff\x03\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00_\xff\x08\xff#79
[6.591] handleFlashPacket():  Flash write: Address= 0x8000000, Length=268
[6.591] write():  <932> Tx: $OK#9a
[6.593] read():  <932> Rx: $vFlashWrite:800010c:\x10\xff\x05L}\x03x3\xff\x04K\x13\xff\x04H\xff\xff\x00\xff\x01}\x03}\x03p\x10\xff\x0c\x00\x00 \x00\x00\x00\x00\xff\x11\x00\x08\x08\xff\x03K\x1b\xff\x03I\x03H\xff\xff\x00\xff\x08\xff\x00\x00\x00\x00\x10\x00\x00 \xff\x11\x00\x08\xff\xff\x00\xff\x00\xff(\xff\x00\xff\x1a\xff\x00\xffT\xff\x01"O\xff\x00Q\x09H\x00\xff\x0c\xffO\xff\xffp\x00\xff|\xff\x00"O\xff\x00Q\x04H\x00\xff\x02\xffO\xff\xffp\x00\xffr\xff\x00\xff\xff\xff\x00\x10\x01@\xff\xff\xff\xff\x00\xff\x07\xff\x18\x03("\x00!\x18F\x00\xff\xff\xff;\x1d\x00"\x1a`Z`\xff`\xff`\x1aa\x02}\x03\xffa\x01}\x03\xffb\x10}\x03\xffb\x00}\x03{c\x07\xff\x18\x03\x18F\x00\xff\xff\xff\x03F\x00+\x01\xff\x00\xffY\xff\x0f}\x03{`\x00}\x03\xff`\x00}\x03\xff`\x00}\x03;a\x00}\x03{a;\x1d\x00!\x18F\x00\xffb\xff\x03F\x00+\x01\xff\x00\xffE\xff\x00\xff@7\xffF\xff\xff\x00\x00\xff\xff\xff\xff\x00\xff\x07\xff\x08\x03\x00"\x1a`Z`\xff`\xff`\x18K\xffi\x17JC\xff\x10\x03\xffa\x15K\xffi\x03\xff\x10\x03{`{h\x12K\xffi\x11JC\xff\x04\x03\xffa\x0fK\xffi\x03\xff\x04\x03;`;h\x00"O\xff\x00Q\x0cH\x00\xff\xff\xffO\xff\x00S\xff`\x01}\x03\xff`\x00}\x03;a\x02}\x03{a\x07\xff\x08\x03\x19F\x04H\x00\xff\x03\xff\x00\xff\x187\xffF\xff\xff\x00\xff\x00\x10\x02@\x00\x10\x01@\xff\xff\x00\xffr\xff\x00\xff\x00\xff\xff\xff\xff\xff\xff\xff\x00\xff\x15K\xffi\x14JC\xff\x01\x03\xffa\x12K\xffi\x03\xff\x01\x03\xff`\xffh\x0fK\xffi\x0eJC\xff\xffS\xffa\x0cK\xffi\x03\xff\xffS{`{h\x0aK[h\xff`\xffh}\x03\xff\xffc\xff`\xffhC\xff\x00s\xff`\x04J\xffhS`\x00\xff\x147\xffF\xff\xffpG\x00\x10\x02@\x00\x00\x01@\xff\xff\x00\xff\x00\xff\xff\xff\xff\xff\x00\xff\x00\xff\xff\xff\xff\xff\x00\xff\x00\xff\xff\xff\xff\xff\x00\xff\x00\xff\xff\xff\xff\xff\x00\xff\x00\xff\xff\xff\xff\xff\x00\xff\x00\xff\xffF\xff\xffpG\xff\xff\x00\xff\x00\xff\xffF\xff\xffpG\xff\xff\x00\xff\x00\xff\xffF\xff\xffpG\xff\xff\x00\xff\x00\xfft\xff\x00\xff\xff\xff\xff\xff\x00\xff\x00\xff\xffF\xff\xffpG\xff\xff\xff\xff\x0bH\x0cI\x0cJ\x00}\x03\x02\xff\xffX\xffP\x043\xff\x18\xffB\xff\xff\x09J\x09L\x00}\x03\x01\xff\x13`\x042\xffB\xff\xff\x00\xff\xff\xff\xff\xff\xff\xffpG\x00\x00\x00 \x0c\x00\x00 \x08\x12\x00\x08\x0c\x00\x00 ,\x00\x00 \xff\xff\x00\x00\xff\xff\x00\xff\x08K\x1bh\x07JC\xff\x10\x03\x13`\x03 \x00\xff+\xff\x0f \x00\xff\x08\xff\xff\xfff\xff\x00}\x03\x18F\xff\xff\x00\xff\x00 \x02@\xff\xff\xff\xff\x00\xffx`\x12K\x1ah\x12K\x1bx\x19FO\xffzs\xff\xff\xff\xff\xff\xff\xff\xff\x18F\x00\xff5\xff\x03F\x00+\x01\xff\x01}\x03\x0e\xff{h\x0f+\x0a\xff\x00"yhO\xff\xff0\x00\xff\x0b\xff\x06J{h\x13`\x00}\x03\x00\xff\x01}\x03\x18F\x087\xffF\xff\xff\x00\x00\x00 \x08\x00\x00 \x04\x00\x00 \xff\xff\x00\xff\x05K\x1bx\x1aF\x05K\x1bh\x13D\x03J\x13`\x00\xff\xffF\xff\xffpG\x08\x00\x00 (\x00\x00 \xff\xff\x00\xff\x02K\x1bh\x18F\xffF\xff\xffpG(\x00\x00 \xff\xff\xff\xff\x00\xffx`\xff\xff\xff\xff\xff`{h\xff`\xffh\xff\xff\xff?\x05\xff\x0aK\x1bx\x1aF\xffh\x13D\xff`\x00\xff\xff\xff\xff\xff\x02F\xffh\xff\x1a\xffh\xffB\xff\xff\x00\xff\x00\xff\x107\xffF\xff\xff\x00\xff\x08\x00\x00 \xff\xff\xff\xff\x00\xffx`{h\x03\xff\x07\x03\xff`\x0cK\xffh\xff`\xffhO\xff\xff\x03\x13@\xff`\xffh\x1a\x02\xffh\x13CC\xff\xffcC\xff\x003\xff`\x04J\xffh\xff`\x00\xff\x147\xffF\xff\xffpG\x00\xff\x00\xff\x00\xff\xff\xff\x00\xff\x04K\xffh\x1b\x0a\x03\xff\x07\x03\x18F\xffF\xff\xffpG\x00\xff\x00\xff\x00\xff\xff\xff\xff\xff\x00\xff\x03F9`\xffq\xff\xff\x070\x00+\x0a\xff;h\xff\xff\x0cI\xff\xff\x070\x12\x01\xff\xff\x0bD\xff\xff\x00}\x03\x0a\xff;h\xff\xff\x08I\xffy\x03\xff\x0f\x03\x04;\x12\x01\xff\xff\x0bD\x1av\x00\xff\x0c7\xffF\xff\xffpG\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\xff\xff\xff\xff\x00\xff\xff`\xff`z`\xffh\x03\xff\x07\x03\xffa\xffi\xff\xff\x07\x03\x04+(\xff\x04}\x03\xffa\xffi\x043\x06+\x02\xff\xffi\x03;\x00\xff\x00}\x03{aO\xff\xff2\xffi\x02\xff\x03\xff\xffC\xffh\x1a@{i\xff@O\xff\xff1{i\x01\xff\x03\xff\xffC{h\x0b@\x13C\x18F}\x047\xffF\xff\xffpG\xff\xff\xff\xff\x00\xffx`{h\x01;\xff\xff\xff\x7f\x01\xff\x01}\x03\x0f\xff\x0aJ{h\x01;S`\x0f!O\xff\xff0\xff\xff\xff\xff\x05K\x00"\xff`\x04K\x07"\x1a`\x00}\x03\x18F\x087\xffF\xff\xff\x00\xff\x10\xff\x00\xff\xff\xff\xff\xff\x00\xffx`xh\xff\xffI\xff\x00\xff\x087\xffF\xff\xff\xff\xff\xff\xff\x00\xff\x03F\xff`z`\xffs\x00}\x03{a\xff\xff^\xffxazh\xffhxi\xff\xff\xff\xff\x02F\xff\xff\x0f0\x11F\x18F\xff\xff_\xff\x00\xff\x187\xffF\xff\xff\xff\xff\xff\xff\x00\xffx`xh\xff\xff\xff\xff\x03F\x18F\x087\xffF\xff\xff\x00\x00\xff\xff\xff\xff\x00\xffx`9`\x00}\x03{b\x00}\x03;bi\xff\x01"{j\x02\xff\x03\xff\xffa;h\x1bh\xffi\x13@\xffa\xffi\xffi\xffB@\xffX\xff;h[h\xffJ\xffB^\xff\xffJ\xffBu\xff\xffJ\xffBX\xff\xffJ\xffBo\xff\xffJ\xffBR\xff\xffJ\xffBi\xff\xffJ\xffBL\xff\xffJ\xffBc\xff\xffJ\xffBF\xff\xffJ\xffB]\xff\x12+}\x0a\xff\x12+Y\xff\x01\xffR\xff}\x03\xffs\x07\x00\x08M\x07\x00\x08_\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08\xff\x07\x00\x08U\x07\x00\x08i\x07\x00\x08yJ\xffB\x13\xff,\xff;h\xffh;b)\xff;h\xffh\x043;b}\x04\xff;h\xffh\x083;b\x1f\xff;h\xffh\x0c3;b\x1a\xff;h\xffh\x00+\x02\xff\x04}\x03;b\x13\xff;h\xffh\x01+\x05\xff\x08}\x03;b{h\xffi\x1aa\x09\xff\x08}\x03;b{h\xffiZa\x03\xff\x00}\x03;b\x00\xff\x00\xff\xffi\xff+\x01\xff{h\x01\xff{h\x043{a\xffi\xff+\x02\xff{j\xff\x00\x02\xff{j\x08;\xff\x00;a{i\x1ah\x0f!;i\x01\xff\x03\xff\xffC\x1a@9j;i\x01\xff\x03\xff\x1aC{i\x1a`;h[h\x03\xff\xffS\x00+\x00\xff\xff\xffMK\xffiLJC\xff\x01\x03\xffaJK\xffi\x03\xff\x01\x03\xff`\xffhHJ{j\xff\x08\x023R\xff}\x030\xff`{j\x03\xff\x03\x03\xff\x00\x0f"\x02\xff\x03\xff\xffC\xffh\x13@\xff`{h@J\xffB\x13\xff{h?J\xffB\x0d\xff{h>J\xffB\x07\xff{h=J\xffB\x01\xff\x03}\x03\x06\xff\x04}\x03\x04\xff\x02}\x03\x02\xff\x01}\x03\x00\xff\x00}\x03zj\x02\xff\x03\x02\xff\x00\xff@\xffh\x13C\xff`/I{j\xff\x08\x023\xffhA\xff}\x03 ;h[h\x03\xff\xff\x13\x00+\x06\xff-K\xffh,I\xffi\x13C\xff`\x06\xff}\x0aK\xffh\xffi\xffC(I\x13@\xff`;h[h\x03\xff\x00\x13\x00+\x06\xff}\x03K\xffh"I\xffi\x13C\xff`\x06\xff K\xffh\xffi\xffC\x1eI\x13@\xff`;h[h\x03\xff\x003\x00+\x06\xff\x19KZh\x18I\xffi\x13CK`\x06\xff\x16KZh\xffi\xffC\x14I\x13@K`;h[h\x03\xff\xff3\x00+!\xff\x0fK\x1ah\x0eI\xffi\x13C\x0b`!\xff\x00\xff\x00\x002\x10\x00\x001\x10\x00\x00"\x10\x00\x00!\x10\x00\x00\x12\x10\x00\x00\x11\x10\x00\x10\x02@\x00\x00\x01@\x00\x08\x01@\x00\x0c\x01@\x00\x10\x01@\x00\x14\x01@\x00\x04\x01@\x0bK\x1ah\xffi\xffC\x09I\x13@\x0b`{j\x013{b;h\x1ah{j"\xff\x03\xff\x00+\x7f\xff\xff\xff\x00\xff\x00\xff,7\xffF\xff\xffpG\x00\x04\x01@\xff\xff\xff\xff\x00\xffx`\x0bF{\xff\x13F{p{x\x00+\x03\xffz\xff{h\x1aa\x03\xff{\xff\x1a\x04{h\x1aa\x00\xff\x0c7\xffF\xff\xffpG\xff\xff\xff\xff\x00\xffx`{h\x00+\x01\xff\x01}\x03r\xff{h\x1bh\x03\xff\x01\x03\x00+\x00\xff\xff\xff\xffK[h\x03\xff\x0c\x03\x04+\x0c\xff\xffK[h\x03\xff\x0c\x03\x08+\x12\xff\xffK[h\x03\xff\xff3\xff\xff\xff?\x0b\xff\xffK\x1bh\x03\xff\x003\x00+l\xff{h[h\x00+h\xff\x01}\x03L\xff{h[h\xff\xff\xff?\x06\xff\xffK\x1bh\x7fJC\xff\xff3\x13`.\xff{h[h\x00+\x0c\xff{K\x1bhzJ}\x03\xff\xff3\x13`xK\x1bhwJ}\x03\xff\xff}\x03\x13`\x1d\xff{h[h\xff\xff\xff/\x0c\xffrK\x1bhqJC\xff\xff}\x03\x13`oK\x1bhnJC\xff\xff3\x13`\x0b\xffkK\x1bhjJ}\x03\xff\xff3\x13`hK\x1bhgJ}\x03\xff\xff}\x03\x13`{h[h\x00+\x13\xff\xff\xff\xff\xff8a\x08\xff\xff\xff\xff\xff\x02F;i\xff\x1ad+\x01\xff\x03}\x03\x00\xff]K\x1bh\x03\xff\x003\x00+\xff\xff\x14\xff\xff\xff\xff\xff8a\x08\xff\xff\xff\xff\xff\x02F;i\xff\x1ad+\x01\xff\x03}\x03\xff\xffSK\x1bh\x03\xff\x003\x00+\xff\xff\x00\xff\x00\xff{h\x1bh\x03\xff\x02\x03\x00+c\xffLK[h\x03\xff\x0c\x03\x00+\x0b\xffIK[h\x03\xff\x0c\x03\x08+\x1c\xffFK[h\x03\xff\xff3\x00+\x16\xffCK\x1bh\x03\xff\x02\x03\x00+\x05\xff{h\x1bi\x01+\x01\xff\x01}\x03\xff\xff=K\x1bh}\x03\xff\xff\x02{h[i\xff\x009I\x13C\x0b`:\xff{h\x1bi\x00+ \xff6K\x01"\x1a`\xff\xff\xff\xff8a\x08\xff\xff\xff\x7f\xff\x02F;i\xff\x1a\x02+\x01\xff\x03}\x03\xff\xff-K\x1bh\x03\xff\x02\x03\x00+\xff\xff}\x0aK\x1bh}\x03\xff\xff\x02{h[i\xff\x00'I\x13C\x0b`\x15\xff&K\x00"\x1a`\xff\xffb\xff8a\x08\xff\xff\xff^\xff\x02F;i\xff\x1a\x02+\x01\xff\x03}\x03\xff\xff\x1dK\x1bh\x03\xff\x02\x03\x00+\xff\xff{h\x1bh\x03\xff\x08\x03\x00+:\xff{h\xffi\x00+\x19\xff\x17K\x01"\x1a`\xff\xffB\xff8a\x08\xff\xff\xff>\xff\x02F;i\xff\x1a\x02+\x01\xff\x03}\x03`\xff\x0dK[j\x03\xff\x02\x03\x00+\xff\xff\x01 \x00\xff\xff\xff\x1c\xff\x0aK\x00"\x1a`\xff\xff(\xff8a\x0f\xff\xff\xff}\x04\xff\x02F;i\xff\x1a\x02+\x08\xff\x03}\x03F\xff\x00\xff\x00\x10\x02@\x00\x00BB\xff\x04BB\xffK[j\x03\xff\x02\x03\x00+\xff\xff{h\x1bh\x03\xff\x04\x03\x00+\x00\xff\xff\xff\x00}\x03\xffu\xffK\xffi\x03\xff\xffS\x00+\x0d\xff\xffK\xffi\xffJC\xff\xffS\xffa\xffK\xffi\x03\xff\xffS\xff`\xffh\x01}\x03\xffu\xffK\x1bh\x03\xff\xffs\x00+\x18\xff\x7fK\x1bh~JC\xff\xffs\x13`\xff\xff\xff\xff8a\x08\xff\xff\xff\xff\xff\x02F;i\xff\x1ad+\x01\xff\x03}\x03\x03\xffuK\x1bh\x03\xff\xffs\x00+\xff\xff{h\xffh\x01+\x06\xffoK\x1bjnJC\xff\x01\x03\x13b-\xff{h\xffh\x00+\x0c\xffjK\x1bjiJ}\x03\xff\x01\x03\x13bgK\x1bjfJ}\x03\xff\x04\x03\x13b\x1c\xff{h\xffh\x05+\x0c\xffaK\x1bj`JC\xff\x04\x03\x13b^K\x1bj]JC\xff\x01\x03\x13b\x0b\xff[K\x1bjZJ}\x03\xff\x01\x03\x13bXK\x1bjWJ}\x03\xff\x04\x03\x13b{h\xffh\x00+\x15\xff\xff\xff\xff\xff8a\x0a\xff\xff\xff\xff\xff\x02F;i\xff\x1aA\xff\xff2\xffB\x01\xff\x03}\x03\xff\xffKK\x1bj\x03\xff\x02\x03\x00+\xff\xff\x14\xff\xff\xff\x7f\xff8a\x0a\xff\xff\xff{\xff\x02F;i\xff\x1aA\xff\xff2\xffB\x01\xff\x03}\x03\xff\xff@K\x1bj\x03\xff\x02\x03\x00+\xff\xff\xff}]\x01+\x05\xff<K\xffi;J}\x03\xff\xffS\xffa{h\xffi\x00+\x00\xff\xff\xff6K[h\x03\xff\x0c\x03\x08+a\xff{h\xffi\x02+F\xff3K\x00"\x1a`\xff\xffO\xff8a\x08\xff\xff\xffK\xff\x02F;i\xff\x1a\x02+\x01\xff\x03}\x03m\xff)K\x1bh\x03\xff\x00s\x00+\xff\xff{h\x1bj\xff\xff\xff?\x08\xff}\x04K[h}\x03\xff\x002{h\xffh!I\x13CK`\x1fK[h}\x03\xfft\x12{h\x19j{h[j\x0bC\x1bI\x13CK`\x1bK\x01"\x1a`\xff\xff\x1f\xff8a\x08\xff\xff\xff\x1b\xff\x02F;i\xff\x1a\x02+\x01\xff\x03}\x03=\xff\x11K\x1bh\x03\xff\x00s\x00+\xff\xff5\xff\x10K\x00"\x1a`\xff\xff\x08\xff8a\x08\xff\xff\xff\x04\xff\x02F;i\xff\x1a\x02+\x01\xff\x03}\x03&\xff\x06K\x1bh\x03\xff\x00s\x00+\xff\xff\x1e\xff{h\xffi\x01+\x07\xff\x01}\x03\x19\xff\x00\x10\x02@\x00p\x00@`\x00BB\x0bK[h\xff`\xffh\x03\xff\xff2{h\x1bj\xffB\x06\xff\xffh\x03\xffp\x12{h[j\xffB\x01\xff\x01}\x03\x00\xff\x00}\x03\x18F\x187\xffF\xff\xff\x00\x10\x02@\xff\xff\xff\xff\x00\xffx`9`{h\x00+\x01\xff\x01}\x03\xff\xffjK\x1bh\x03\xff\x07\x03:h\xffB\x10\xffgK\x1bh}\x03\xff\x07\x02eI;h\x13C\x0b`cK\x1bh\x03\xff\x07\x03:h\xffB\x01\xff\x01}\x03\xff\xff{h\x1bh\x03\xff\x02\x03\x00+ \xff{h\x1bh\x03\xff\x04\x03\x00+\x05\xffYK[hXJC\xff\xffcS`{h\x1bh\x03\xff\x08\x03\x00+\x05\xffSK[hRJC\xff`SS`PK[h}\x03\xff\xff\x02{h\xffhMI\x13CK`{h\x1bh\x03\xff\x01\x03\x00+@\xff{h[h\x01+\x07\xffGK\x1bh\x03\xff\x003\x00+\x15\xff\x01}\x03\x7f\xff{h[h\x02+\x07\xffAK\x1bh\x03\xff\x00s\x00+\x09\xff\x01}\x03s\xff=K\x1bh\x03\xff\x02\x03\x00+\x01\xff\x01}\x03k\xff9K[h}\x03\xff\x03\x02{h[h6I\x13CK`\xff\xffV\xff\xff`\x0a\xff\xff\xffR\xff\x02F\xffh\xff\x1aA\xff\xff2\xffB\x01\xff\x03}\x03S\xff-K[h\x03\xff\x0c\x02{h[h\xff\x00\xffB\xff\xff'K\x1bh\x03\xff\x07\x03:h\xffB\x10\xff}\x04K\x1bh}\x03\xff\x07\x02"I;h\x13C\x0b` K\x1bh\x03\xff\x07\x03:h\xffB\x01\xff\x01}\x032\xff{h\x1bh\x03\xff\x04\x03\x00+\x08\xff\x19K[h}\x03\xff\xffb{h\xffh\x16I\x13CK`{h\x1bh\x03\xff\x08\x03\x00+\x09\xff\x12K[h}\x03\xff`R{h\x1bi\xff\x00\x0eI\x13CK`\x00\xff!\xff\x02F\x0bK[h\x1b\x09\x03\xff\x0f\x03\x0aI\xff\\"\xff\x03\xff\x09J\x13`\x09K\x1bh\x18F\xff\xff\xff\xff\x00}\x03\x18F\x107\xffF\xff\xff\x00\xff\x00 \x02@\x00\x10\x02@\xff\x11\x00\x08\x00\x00\x00 \x04\x00\x00 \xff\xff\xff\xff\x00\xff\x00}\x03\xff`\x00}\x03\xff`\x00}\x03{a\x00}\x03{`\x00}\x03;a\x1eK[h\xff`\xffh\x03\xff\x0c\x03\x04+\x02\xff\x08+\x03\xff'\xff\x19K;a'\xff\xffh\xff\x0c\x03\xff\x0f\x03\x17J\xff\\{`\xffh\x03\xff\xff3\x00+\x10\xff\x11K[h[\x0c\x03\xff\x01\x03\x11J\xff\\\xff`{h\x0dJ\x03\xff\x02\xff\xffh\xff\xff\xff\xff{a\x04\xff{h\x0cJ\x02\xff\x03\xff{a{i;a\x02\xff\x05K;a\x00\xff;i\x18F\x1c7\xffF\xff\xffpG\x00\xff\x00\x10\x02@\x00\x12z\x00\xff\x11\x00\x08\xff\x11\x00\x08\x00\x09=\x00\xff\xff\xff\xff\x00\xffx`\x0aK\x1bh\x0aJ\xff\xff\x03}\x03[\x0azh\x02\xff\x03\xff\xff`\x00\xff\xffhZ\x1e\xff`\x00+\xff\xff\x00\xff\x00\xff\x147\xffF\xff\xffpG\x00\x00\x00 \xffMb\x10\x03F\x02D\xffB\x00\xffpG\x03\xff\x01\x1b\xff\xffp\xff\x00&\x0cM\x0dLd\x1b\xff\x10\xffB\x09\xff\x00\xff\x1a\xff\x00&\x0aM\x0aLd\x1b\xff\x10\xffB\x05\xffp\xffU\xff\x04;\xffG\x016\xff\xffU\xff\x04;\xffG\x016\xff\xff\x00\x12\x00\x08\x00\x12\x00\x08\x00\x12\x00\x08\x04\x12\x00\x08\xff\xff\x00\xff\xff\xff\x08\xff\xffFpG\xff\xff\x00\xff\xff\xff\x08\xff\xffFpG#52
[6.594] handleFlashPacket():  Flash write: Address= 0x800010c, Length=4304
[6.595] write():  <932> Tx: $OK#9a
[6.595] read():  <932> Rx: $vFlashWrite:80011dc:\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x06\x07\x08\x09\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x10\x01\x02\x00\x00#66
[6.595] handleFlashPacket():  Flash write: Address= 0x80011dc, Length=36
[6.595] write():  <932> Tx: $OK#9a
[6.595] read():  <932> Rx: $vFlashWrite:8001200:1\x01\x00\x08#78
[6.595] handleFlashPacket():  Flash write: Address= 0x8001200, Length=4
[6.595] write():  <932> Tx: $OK#9a
[6.595] read():  <932> Rx: $vFlashWrite:8001204:\x0d\x01\x00\x08#58
[6.595] handleFlashPacket():  Flash write: Address= 0x8001204, Length=4
[6.596] write():  <932> Tx: $OK#9a
[6.596] read():  <932> Rx: $vFlashWrite:8001208:\x00}\x04\xff\x00\x10\x00\x00\x00\x01\x00\x00\x00#cc
[6.596] handleFlashPacket():  Flash write: Address= 0x8001208, Length=12
[6.596] write():  <932> Tx: $OK#9a
[6.596] read():  <932> Rx: $vFlashDone#ea
[6.596] WriteFlashDone():  Writing to C:\Users\asus\AppData\Local\Temp\ST-LINK_GDB_server_a09524.srec
[6.598] closeDevice():  Stm32Device, closeDevice() entry
[6.598] handleTargetDeviceEvent():  GDB session, device event: 5
[6.598] handleTargetDeviceEvent():  GDB session, device event: 5
[6.600] pollAndNotifyRun():  Stm32Device, pollAndNotify stopped
[6.614] closeDevice():  Stm32Device, closeDevice() exit
[6.614] spawnCubeProgrammer():   ------ Switching to STM32CubeProgrammer ----- 
[6.614] file_utils_spawn():  Spawning "C:\ST\STM32CubeIDE_1.12.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.cubeprogrammer.win32_2.1.200.202311302303\tools\bin\STM32_Programmer_CLI.exe --connect port=SWD speed=fast mode=UR reset=hwRst shared --download C:\Users\asus\AppData\Local\Temp\ST-LINK_GDB_server_a09524.srec --verify --log C:\Users\asus\AppData\Local\Temp\STM32CubeProgrammer_a09524.log"
[7.489] file_utils_spawn():  Return code 0
[7.491] spawnCubeProgrammer():  00:05:07:081       -------------------------------------------------------------------
[7.491] spawnCubeProgrammer():  00:05:07:083                        STM32CubeProgrammer v2.16.0                  
[7.491] spawnCubeProgrammer():  00:05:07:083       -------------------------------------------------------------------
[7.491] spawnCubeProgrammer():  
[7.491] spawnCubeProgrammer():  00:05:07:083 
[7.491] spawnCubeProgrammer():  
[7.491] spawnCubeProgrammer():  00:05:07:083 Log output file:   C:\Users\asus\AppData\Local\Temp\STM32CubeProgrammer_a09524.log
[7.491] spawnCubeProgrammer():  00:05:07:083 Command line:  --connect port=SWD speed=fast mode=ur reset=hwrst shared --download "C:\Users\asus\AppData\Local\Temp\ST-LINK_GDB_server_a09524.srec" --verify --log "C:\Users\asus\AppData\Local\Temp\STM32CubeProgrammer_a09524.log"
[7.491] spawnCubeProgrammer():  00:05:07:083 
[7.491] spawnCubeProgrammer():  00:05:07:133 ST-Link Server is running on port : 7184
[7.491] spawnCubeProgrammer():  00:05:07:241 ST-LINK SN  : 62002500160000475737534E
[7.491] spawnCubeProgrammer():  00:05:07:241 ST-LINK FW  : V2J44S7
[7.491] spawnCubeProgrammer():  00:05:07:243 Board       : --
[7.491] spawnCubeProgrammer():  00:05:07:245 Voltage     : 3.26V
[7.491] spawnCubeProgrammer():  00:05:07:262 SWD freq    : 4000 KHz
[7.492] spawnCubeProgrammer():  00:05:07:262 Connect mode: Under Reset
[7.492] spawnCubeProgrammer():  00:05:07:262 Reset mode  : Hardware reset
[7.492] spawnCubeProgrammer():  00:05:07:269 Device ID   : 0x410
[7.492] spawnCubeProgrammer():  00:05:07:274 Revision ID : Rev X
[7.492] spawnCubeProgrammer():  00:05:07:295 flash loader C:/ST/STM32CubeIDE_1.12.0/STM32CubeIDE/plugins/com.st.stm32cube.ide.mcu.externaltools.cubeprogrammer.win32_2.1.200.202311302303/tools/bin/FlashLoader/0x410.stldr is loaded
[7.492] spawnCubeProgrammer():  00:05:07:296 Device name : STM32F101/F102/F103 Medium-density
[7.492] spawnCubeProgrammer():  00:05:07:296 Reading data...
[7.492] spawnCubeProgrammer():  00:05:07:297 r ap 0 @0x1FFFF7E0 0x00000004 bytes Data 0xFFFF0040
[7.492] spawnCubeProgrammer():  00:05:07:297 Flash size  : 64 KBytes
[7.492] spawnCubeProgrammer():  00:05:07:298 Start Address : 8000000
[7.492] spawnCubeProgrammer():  00:05:07:298 Device type : MCU
[7.492] spawnCubeProgrammer():  00:05:07:298 Device CPU  : Cortex-M3
[7.492] spawnCubeProgrammer():  00:05:07:298 BL Version  : --
[7.492] spawnCubeProgrammer():  00:05:07:298 
[7.492] spawnCubeProgrammer():  00:05:07:300 
[7.492] spawnCubeProgrammer():  
[7.492] spawnCubeProgrammer():  00:05:07:300 Memory Programming ...
[7.492] spawnCubeProgrammer():  00:05:07:300 Opening and parsing file: ST-LINK_GDB_server_a09524.srec
[7.492] spawnCubeProgrammer():  00:05:07:307   File          : ST-LINK_GDB_server_a09524.srec
[7.492] spawnCubeProgrammer():  00:05:07:307   Size          : 4.52 KB 
[7.492] spawnCubeProgrammer():  00:05:07:307   Address       : 0x08000000 
[7.492] spawnCubeProgrammer():  00:05:07:307 
[7.492] spawnCubeProgrammer():  
[7.492] spawnCubeProgrammer():  00:05:07:308 Erasing Segment <0> Address <0x08000000> Size <4628>Bytes
[7.492] spawnCubeProgrammer():  00:05:07:308 Erasing memory corresponding to segment 0:
[7.492] spawnCubeProgrammer():  00:05:07:308 Memory Erase via FlashLoader!
[7.492] spawnCubeProgrammer():  00:05:07:308 Memory erase...
[7.492] spawnCubeProgrammer():  00:05:07:314 halt ap 0 
[7.492] spawnCubeProgrammer():  00:05:07:314 w ap 0 reg 15 PC   (0x20000000)  
[7.492] spawnCubeProgrammer():  00:05:07:315 w ap 0 reg 17 MSP  (0x20000500)  
[7.492] spawnCubeProgrammer():  00:05:07:315 w ap 0 reg 16 xPSR (0x01000000)  
[7.492] spawnCubeProgrammer():  00:05:07:319 w ap 0 @0x20000960 : 0x00000200 bytes, Data 0x00000000...
[7.492] spawnCubeProgrammer():  00:05:07:324 w ap 0 @0x20000000 : 0x00000004 bytes, Data 0x0000BE00...
[7.492] spawnCubeProgrammer():  00:05:07:335 w ap 0 @0x20000004 : 0x0000053E bytes, Data 0xF000B580...
[7.492] spawnCubeProgrammer():  00:05:07:342 Erasing internal memory sectors [0 4]
[7.492] spawnCubeProgrammer():  00:05:07:343 Init flashloader...
[7.492] spawnCubeProgrammer():  00:05:07:343 halt ap 0 
[7.492] spawnCubeProgrammer():  00:05:07:345 w ap 0 reg 0 R0   0x00000001
[7.492] spawnCubeProgrammer():  00:05:07:345 w ap 0 reg 1 R1   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:346 w ap 0 reg 2 R2   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:347 w ap 0 reg 3 R3   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:347 w ap 0 reg 4 R4   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:348 w ap 0 reg 5 R5   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:349 w ap 0 reg 6 R6   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:349 w ap 0 reg 7 R7   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:350 w ap 0 reg 8 R8   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:350 w ap 0 reg 9 R9   0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:351 w ap 0 reg 10 R10  0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:352 w ap 0 reg 11 R11  0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:352 w ap 0 reg 12 R12  0x00000000
[7.492] spawnCubeProgrammer():  00:05:07:361 w ap 0 reg 13 SP   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:362 w ap 0 reg 14 LR   0x20000001
[7.493] spawnCubeProgrammer():  00:05:07:362 w ap 0 reg 15 PC   0x20000005
[7.493] spawnCubeProgrammer():  00:05:07:362 w ap 0 reg 16 xPSR 0x01000000
[7.493] spawnCubeProgrammer():  00:05:07:363 w ap 0 reg 17 MSP  0x2000093E
[7.493] spawnCubeProgrammer():  00:05:07:364 w ap 0 reg 18 PSP  0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:364 run ap 0 
[7.493] spawnCubeProgrammer():  00:05:07:365 halt ap 0 
[7.493] spawnCubeProgrammer():  00:05:07:366 r ap 0 reg 0 R0   0x00000001
[7.493] spawnCubeProgrammer():  00:05:07:366 Loader sector erase...
[7.493] spawnCubeProgrammer():  00:05:07:367 w ap 0 reg 0 R0   0x08000000
[7.493] spawnCubeProgrammer():  00:05:07:368 w ap 0 reg 1 R1   0x08001000
[7.493] spawnCubeProgrammer():  00:05:07:368 w ap 0 reg 2 R2   0x00000002
[7.493] spawnCubeProgrammer():  00:05:07:370 w ap 0 reg 3 R3   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:374 w ap 0 reg 4 R4   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:374 w ap 0 reg 5 R5   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:375 w ap 0 reg 6 R6   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:376 w ap 0 reg 7 R7   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:376 w ap 0 reg 8 R8   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:377 w ap 0 reg 9 R9   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:378 w ap 0 reg 10 R10  0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:379 w ap 0 reg 11 R11  0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:379 w ap 0 reg 12 R12  0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:379 w ap 0 reg 13 SP   0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:380 w ap 0 reg 14 LR   0x20000001
[7.493] spawnCubeProgrammer():  00:05:07:381 w ap 0 reg 15 PC   0x200001AF
[7.493] spawnCubeProgrammer():  00:05:07:381 w ap 0 reg 16 xPSR 0x01000000
[7.493] spawnCubeProgrammer():  00:05:07:383 w ap 0 reg 17 MSP  0x2000093E
[7.493] spawnCubeProgrammer():  00:05:07:383 w ap 0 reg 18 PSP  0x00000000
[7.493] spawnCubeProgrammer():  00:05:07:383 run ap 0 
[7.493] spawnCubeProgrammer():  00:05:07:496 halt ap 0 
[7.493] spawnCubeProgrammer():  00:05:07:497 r ap 0 reg 0 R0   0x00000001
[7.493] spawnCubeProgrammer():  00:05:07:497 erase: 0188ms
[7.494] spawnCubeProgrammer():  00:05:07:497 Download in Progress:
[7.494] spawnCubeProgrammer():  00:05:07:497   Size          : 4628 Bytes
[7.494] spawnCubeProgrammer():  00:05:07:497   Address       : 0x08000000 
[7.494] spawnCubeProgrammer():  00:05:07:497 
[7.494] spawnCubeProgrammer():  
[7.494] spawnCubeProgrammer():  00:05:07:497 Buffer program...
[7.494] spawnCubeProgrammer():  00:05:07:508 halt ap 0 
[7.494] spawnCubeProgrammer():  00:05:07:508 w ap 0 reg 15 PC   (0x20000000)  
[7.494] spawnCubeProgrammer():  00:05:07:509 w ap 0 reg 17 MSP  (0x20000500)  
[7.494] spawnCubeProgrammer():  00:05:07:509 w ap 0 reg 16 xPSR (0x01000000)  
[7.494] spawnCubeProgrammer():  00:05:07:514 w ap 0 @0x20000960 : 0x00000200 bytes, Data 0x00000000...
[7.494] spawnCubeProgrammer():  00:05:07:515 w ap 0 @0x20000000 : 0x00000004 bytes, Data 0x0000BE00...
[7.494] spawnCubeProgrammer():  00:05:07:530 w ap 0 @0x20000004 : 0x0000053E bytes, Data 0xF000B580...
[7.494] spawnCubeProgrammer():  00:05:07:530 Loader write range...
[7.494] spawnCubeProgrammer():  00:05:07:547 w ap 0 @0x20000960 : 0x0000090C bytes, Data 0x20005000...
[7.494] spawnCubeProgrammer():  00:05:07:548 W B1 in RAM @0x20000960 size 0x0000090C : 0016ms
[7.494] spawnCubeProgrammer():  00:05:07:548 Init flashloader...
[7.494] spawnCubeProgrammer():  00:05:07:548 halt ap 0 
[7.494] spawnCubeProgrammer():  00:05:07:549 w ap 0 reg 0 R0   0x00000001
[7.494] spawnCubeProgrammer():  00:05:07:550 w ap 0 reg 1 R1   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:551 w ap 0 reg 2 R2   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:551 w ap 0 reg 3 R3   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:552 w ap 0 reg 4 R4   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:552 w ap 0 reg 5 R5   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:553 w ap 0 reg 6 R6   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:556 w ap 0 reg 7 R7   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:558 w ap 0 reg 8 R8   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:558 w ap 0 reg 9 R9   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:559 w ap 0 reg 10 R10  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:559 w ap 0 reg 11 R11  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:560 w ap 0 reg 12 R12  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:560 w ap 0 reg 13 SP   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:562 w ap 0 reg 14 LR   0x20000001
[7.494] spawnCubeProgrammer():  00:05:07:562 w ap 0 reg 15 PC   0x20000005
[7.494] spawnCubeProgrammer():  00:05:07:563 w ap 0 reg 16 xPSR 0x01000000
[7.494] spawnCubeProgrammer():  00:05:07:563 w ap 0 reg 17 MSP  0x2000093E
[7.494] spawnCubeProgrammer():  00:05:07:564 w ap 0 reg 18 PSP  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:564 run ap 0 
[7.494] spawnCubeProgrammer():  00:05:07:565 halt ap 0 
[7.494] spawnCubeProgrammer():  00:05:07:566 r ap 0 reg 0 R0   0x00000001
[7.494] spawnCubeProgrammer():  00:05:07:566 w ap 0 reg 0 R0   0x08000000
[7.494] spawnCubeProgrammer():  00:05:07:568 w ap 0 reg 1 R1   0x0000090C
[7.494] spawnCubeProgrammer():  00:05:07:568 w ap 0 reg 2 R2   0x20000960
[7.494] spawnCubeProgrammer():  00:05:07:568 w ap 0 reg 3 R3   0x00000002
[7.494] spawnCubeProgrammer():  00:05:07:570 w ap 0 reg 4 R4   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:574 w ap 0 reg 5 R5   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:574 w ap 0 reg 6 R6   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:575 w ap 0 reg 7 R7   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:576 w ap 0 reg 8 R8   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:576 w ap 0 reg 9 R9   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:577 w ap 0 reg 10 R10  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:577 w ap 0 reg 11 R11  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:578 w ap 0 reg 12 R12  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:578 w ap 0 reg 13 SP   0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:578 w ap 0 reg 14 LR   0x20000001
[7.494] spawnCubeProgrammer():  00:05:07:580 w ap 0 reg 15 PC   0x2000002F
[7.494] spawnCubeProgrammer():  00:05:07:581 w ap 0 reg 16 xPSR 0x01000000
[7.494] spawnCubeProgrammer():  00:05:07:581 w ap 0 reg 17 MSP  0x2000093E
[7.494] spawnCubeProgrammer():  00:05:07:582 w ap 0 reg 18 PSP  0x00000000
[7.494] spawnCubeProgrammer():  00:05:07:582 run ap 0 
[7.494] spawnCubeProgrammer():  00:05:07:599 w ap 0 @0x2000126C : 0x00000908 bytes, Data 0x69BB490E...
[7.494] spawnCubeProgrammer():  00:05:07:599 W B2 in RAM @0x20002B60 size 0x00000908: 0051ms
[7.494] spawnCubeProgrammer():  00:05:07:663 r ap 0 reg 0 R0   0x00000001
[7.494] spawnCubeProgrammer():  00:05:07:663 Wait W B1 in Flash @0x08000000 size 0x0000090C: 0064ms
[7.495] spawnCubeProgrammer():  00:05:07:664 w ap 0 reg 0 R0   0x0800090C
[7.495] spawnCubeProgrammer():  00:05:07:664 w ap 0 reg 1 R1   0x00000908
[7.495] spawnCubeProgrammer():  00:05:07:665 w ap 0 reg 2 R2   0x2000126C
[7.495] spawnCubeProgrammer():  00:05:07:667 w ap 0 reg 3 R3   0x00000002
[7.495] spawnCubeProgrammer():  00:05:07:667 w ap 0 reg 4 R4   0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:668 w ap 0 reg 5 R5   0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:668 w ap 0 reg 6 R6   0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:669 w ap 0 reg 7 R7   0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:669 w ap 0 reg 8 R8   0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:671 w ap 0 reg 9 R9   0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:672 w ap 0 reg 10 R10  0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:673 w ap 0 reg 11 R11  0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:673 w ap 0 reg 12 R12  0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:675 w ap 0 reg 13 SP   0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:675 w ap 0 reg 14 LR   0x20000001
[7.495] spawnCubeProgrammer():  00:05:07:676 w ap 0 reg 15 PC   0x2000002F
[7.495] spawnCubeProgrammer():  00:05:07:676 w ap 0 reg 16 xPSR 0x01000000
[7.495] spawnCubeProgrammer():  00:05:07:677 w ap 0 reg 17 MSP  0x2000093E
[7.495] spawnCubeProgrammer():  00:05:07:677 w ap 0 reg 18 PSP  0x00000000
[7.495] spawnCubeProgrammer():  00:05:07:677 run ap 0 
[7.495] spawnCubeProgrammer():  00:05:07:762 r ap 0 reg 0 R0   0x00000001
[7.495] spawnCubeProgrammer():  00:05:07:763 Write elapsed time: 0231ms
[7.495] spawnCubeProgrammer():  00:05:07:764 Segment[0] downloaded successfully
[7.495] spawnCubeProgrammer():  00:05:07:764 
[7.495] spawnCubeProgrammer():  
[7.495] spawnCubeProgrammer():  00:05:07:764 File download complete
[7.495] spawnCubeProgrammer():  00:05:07:764 Time elapsed during download operation: 00:00:00.456
[7.495] spawnCubeProgrammer():  00:05:07:764 
[7.495] spawnCubeProgrammer():  
[7.495] spawnCubeProgrammer():  00:05:07:764 
[7.495] spawnCubeProgrammer():  Verifying ...
[7.495] spawnCubeProgrammer():  00:05:07:764 
[7.495] spawnCubeProgrammer():  
[7.495] spawnCubeProgrammer():  00:05:07:764 Read progress:
[7.495] spawnCubeProgrammer():  00:05:07:764 Reading data...
[7.495] spawnCubeProgrammer():  00:05:07:798 r ap 0 @0x08000000 0x00001214 bytes Data 0x20005000
[7.495] spawnCubeProgrammer():  00:05:07:802 
[7.495] spawnCubeProgrammer():  
[7.495] spawnCubeProgrammer():  00:05:07:802 Download verified successfully 
[7.495] spawnCubeProgrammer():  00:05:07:802 
[7.495] spawnCubeProgrammer():  
[7.495] spawnCubeProgrammer():  00:05:07:809 Disconnected
[7.496] spawnCubeProgrammer():   ------ Switching context ----- 
[7.565] openDevice():  COM frequency = 4000 kHz
[7.565] openDevice():  Target connection mode: Default
[7.584] readFromTarget():  Reading ROM table for AP 0 @0xe00fffd0
[7.597] reset_hw_wtchpt_module():  Hardware watchpoint supported by the target 
[7.610] initContext():  ST-LINK Firmware version : V2J44S7
[7.610] initContext():  Device ID: 0x410
[7.611] initContext():  PC: 0x8000358
[7.612] initContext():  ST-LINK detects target voltage = 3.26 V
[7.614] initContext():  ST-LINK device status: HALT_MODE
[7.614] handleTargetDeviceEvent():  GDB session, device event: 6
[7.614] handleTargetDeviceEvent():  GDB session, device event: 6
[7.614] pollAndNotifyRun():  Stm32Device, pollAndNotify running...
[7.615] write():  <932> Tx: $OK#9a
[7.615] read():  <932> Rx: $Pf=58030008#8b
[7.621] write():  <932> Tx: $OK#9a
[7.622] read():  <932> Rx: $vCont?#49
[7.622] write():  <932> Tx: $vCont;c;s;t#05
[7.622] read():  <932> Rx: $Hc0#db
[7.622] write():  <932> Tx: $#00
[7.622] read():  <932> Rx: $c#63
[7.632] read():  <952> Rx: $vKill;a410#33
[7.633] handleTargetDeviceEvent():  GDB session, device event: 3
[7.633] handleTargetDeviceEvent():  GDB session, device event: 3
[7.639] handleTargetDeviceEvent():  GDB session, device event: 1
[7.639] handleTargetDeviceEvent():  GDB session, device event: 1
[7.639] handlePacket():  Hidden/Unsupported v-command 'vKill', see RSP for details
[7.639] write():  <952> Tx: $#00
[7.639] read():  <952> Rx: $k#6b
[7.640] run():  GDB session terminated: Client connection lost
[7.640] handleSessionEvent():  GdbSessionManager, session terminated: 2
[7.666] read():  <932> Rx: \x03
[7.666] parseForPacket():  Received Ctrl-C from the client 
[7.680] Device_GetStatus():  ST-LINK device status: RUN_MODE
[7.680] handleSignalPacket():  Device not halted(0), performing Ctrl-C
[7.680] handleTargetDeviceEvent():  GDB session, device event: 4
[7.682] handleSignalPacket():  Device halted
[7.682] write():  <932> Tx: $S02#b5
[7.682] read():  <932> Rx: $g#67
[7.686] write():  <932> Tx: $2a00000000200000f50100002a0000002c0000200000000000000000e04f00200000000000000000000000000000000000000000e04f0020950400089c0400080000002100000000000000000000000000000000e04f002000000000#13
[7.686] read():  <932> Rx: $qXfer:threads:read::0,1000#92
[7.686] write():  <932> Tx: $l<?xml version="1.0"?><threads><thread id="1" core="0" name="main"></thread></threads>#f7
[7.687] read():  <932> Rx: $m800049c,4#65
[7.687] handlePacket():  Reading 0x4 bytes of memory from addr 0x800049c 
[7.688] write():  <932> Tx: $9a42f7d8#39
[7.688] read():  <932> Rx: $m20004fc0,40#ec
[7.688] handlePacket():  Reading 0x40 bytes of memory from addr 0x20004fc0 
[7.690] write():  <932> Tx: $2900000000200000f50100002900000000000000950400089e040008e04f002000200000f401000000000000f5010000f84f002071010008180900208b030008#86
[7.691] read():  <932> Rx: $m8000170,4#2d
[7.691] handlePacket():  Reading 0x4 bytes of memory from addr 0x8000170 
[7.691] write():  <932> Tx: $00224ff4#f8
[7.692] read():  <932> Rx: $vKill;a410#33
[7.692] handlePacket():  Hidden/Unsupported v-command 'vKill', see RSP for details
[7.692] write():  <932> Tx: $#00
[7.692] read():  <932> Rx: $k#6b
[7.692] run():  GDB session terminated: Client connection lost
[7.692] handleSessionEvent():  GdbSessionManager, session terminated: 1
[7.692] handleSessionEvent():  GdbSrv, last session terminated, signal dispose
[7.692] stop():  Stopping port 61234
[7.728] Device_GetStatus():  ST-LINK device status: HALT_MODE
[7.743] cleanup():  Cleanup session: 1
[7.743] cleanup():  Cleanup session: 2
[7.743] ~GdbSession():  GDB session disposed: 1
[7.743] ~GdbSession():  GDB session disposed: 2
[7.768] stop():  Stopping port 61234
[7.774] WaitConnection():  Received stop for port 61234, not accepting new connections.
[7.774] deInit():  GdbSrv, deInit entry.
[7.774] deInit():  GdbSessionManager, deInit entry.
[7.855] deInit():  GdbSessionManager, deInit exit
[7.855] deInit():  SwvSrv deInit entry
[7.855] stop():  Stopping port 61235
[7.960] WaitConnection():  Received stop for port 61235, not accepting new connections.
[7.961] deInit():  SwvSrv deInit exit
[7.961] closeDevice():  Stm32Device, closeDevice() entry
[8.054] pollAndNotifyRun():  Stm32Device, pollAndNotify stopped
[8.063] closeDevice():  Stm32Device, closeDevice() exit
[8.063] deInit():  Stm32Device, deInit success
[8.063] deInit():  GdbSrv, deInit exit.
